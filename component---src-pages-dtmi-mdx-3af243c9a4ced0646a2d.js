(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{faxC:function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return i})),a.d(t,"default",(function(){return d}));var n=a("8o2o"),r=(a("q1tI"),a("7ljp")),c=a("9Dj+"),i={},o={_frontmatter:i},s=c.f;function d(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(r.mdx)(s,Object.assign({},o,a,{components:t,mdxType:"MDXLayout"}),Object(r.mdx)("h1",{id:"iot-plug-and-play-models",style:{position:"relative"}},Object(r.mdx)("a",Object.assign({parentName:"h1"},{href:"#iot-plug-and-play-models","aria-label":"iot plug and play models permalink",className:"anchor before"}),Object(r.mdx)("svg",Object.assign({parentName:"a"},{"aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"}),Object(r.mdx)("path",Object.assign({parentName:"svg"},{fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"})))),"IoT Plug And Play Models"),Object(r.mdx)("p",null,"This route hosts ",Object(r.mdx)("a",Object.assign({parentName:"p"},{href:"https://github.com/Azure/opendigitaltwins-dtdl/blob/master/DTDL/v2/dtdlv2.md",target:"_blank",rel:"nofollow noopener noreferrer"}),"DTDL")," models\nfor each ",Object(r.mdx)("a",Object.assign({parentName:"p"},{href:"/jacdac-ts/services"}),"service"),", similar to ",Object(r.mdx)("a",Object.assign({parentName:"p"},{href:"https://devicemodels.azure.com/",target:"_blank",rel:"nofollow noopener noreferrer"}),"https://devicemodels.azure.com/"),"."),Object(r.mdx)("p",null,"The ",Object(r.mdx)("a",Object.assign({parentName:"p"},{href:"https://github.com/Azure/digital-twin-model-identifier",target:"_blank",rel:"nofollow noopener noreferrer"}),"DTMI")," of each services is formatted based on the class identifier:"),Object(r.mdx)("pre",null,Object(r.mdx)("code",Object.assign({parentName:"pre"},{}),"dtmi:jacdac:services:x{id};1\n")),Object(r.mdx)("p",null,"where ",Object(r.mdx)("inlineCode",{parentName:"p"},"{id}")," is the class identifer rendered as a hex number.\nThe route is generated following the conventions from ",Object(r.mdx)("a",Object.assign({parentName:"p"},{href:"https://github.com/Azure/iot-plugandplay-models#consuming",target:"_blank",rel:"nofollow noopener noreferrer"}),"iot-plugandplay-models"),"\nwhere the ",Object(r.mdx)("inlineCode",{parentName:"p"},":")," are replaced by ",Object(r.mdx)("inlineCode",{parentName:"p"},"/"),", and ",Object(r.mdx)("inlineCode",{parentName:"p"},";")," with ",Object(r.mdx)("inlineCode",{parentName:"p"},"-"),"."),Object(r.mdx)("pre",null,Object(r.mdx)("code",Object.assign({parentName:"pre"},{}),"/dtmi/jacdac/services/x{id}-1.json\n")),Object(r.mdx)("p",null,"For example, ",Object(r.mdx)("a",Object.assign({parentName:"p"},{href:"/jacdac-ts/dtmi/jacdac/services/x0-1.json"}),"/dtmi/jacdac/services/x0-1.json"),"."),Object(r.mdx)("p",null,"To download all service models, go use ",Object(r.mdx)("a",Object.assign({parentName:"p"},{href:"/jacdac-ts/dtmi/jacdac/services.json"}),"/dtmi/jacdac/services.json")),Object(r.mdx)("h2",{id:"device-twin-designer",style:{position:"relative"}},Object(r.mdx)("a",Object.assign({parentName:"h2"},{href:"#device-twin-designer","aria-label":"device twin designer permalink",className:"anchor before"}),Object(r.mdx)("svg",Object.assign({parentName:"a"},{"aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"}),Object(r.mdx)("path",Object.assign({parentName:"svg"},{fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"})))),"Device Twin Designer"),Object(r.mdx)("p",null,"You can compose devices from services using the ",Object(r.mdx)("a",Object.assign({parentName:"p"},{href:"/jacdac-ts/tools/azure-device-twin-designer"}),"Azure Device Twin Designer"),"."),Object(r.mdx)("h2",{id:"azure-iot-explorer",style:{position:"relative"}},Object(r.mdx)("a",Object.assign({parentName:"h2"},{href:"#azure-iot-explorer","aria-label":"azure iot explorer permalink",className:"anchor before"}),Object(r.mdx)("svg",Object.assign({parentName:"a"},{"aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"}),Object(r.mdx)("path",Object.assign({parentName:"svg"},{fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"})))),"Azure IoT Explorer"),Object(r.mdx)("p",null,"In the ",Object(r.mdx)("a",Object.assign({parentName:"p"},{href:"https://docs.microsoft.com/en-us/azure/iot-pnp/howto-use-iot-explorer",target:"_blank",rel:"nofollow noopener noreferrer"}),"Azure IoT Explorer"),",\nadd ",Object(r.mdx)("inlineCode",{parentName:"p"},"https://microbit.github.io/jacdac-ts/dtmi"),"in the ",Object(r.mdx)("strong",{parentName:"p"},"IoT Hub Settings"),"."))}d.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-dtmi-mdx-3af243c9a4ced0646a2d.js.map