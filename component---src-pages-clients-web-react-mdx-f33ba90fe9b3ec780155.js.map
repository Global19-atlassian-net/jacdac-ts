{"version":3,"sources":["webpack:///./src/pages/clients/web/react.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"4OAMaA,EAAe,GACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,cAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,mBAAQ,CACN,GAAM,QACN,MAAS,CACP,SAAY,aAEb,iCAAGC,WAAW,MAAS,CACtB,KAAQ,SACR,aAAc,kBACd,UAAa,kBACZ,mCAAKA,WAAW,KAAQ,CACvB,cAAe,OACf,UAAa,QACb,OAAU,KACV,QAAW,MACX,QAAW,YACX,MAAS,OACR,oCAAMA,WAAW,OAAU,CAC1B,SAAY,UACZ,EAAK,qVAlBb,SAoBA,wEACA,mBAAQ,CACN,GAAM,gBACN,MAAS,CACP,SAAY,aAEb,iCAAGA,WAAW,MAAS,CACtB,KAAQ,iBACR,aAAc,0BACd,UAAa,kBACZ,mCAAKA,WAAW,KAAQ,CACvB,cAAe,OACf,UAAa,QACb,OAAU,KACV,QAAW,MACX,QAAW,YACX,MAAS,OACR,oCAAMA,WAAW,OAAU,CAC1B,SAAY,UACZ,EAAK,qVAlBb,iBAoBA,8BAAW,4BAAYA,WAAW,KAAvB,iBAAX,0GACA,yBAAK,oCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,kdAgBL,iFACA,yBAAK,oCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,4HAML,mBAAQ,CACN,GAAM,YACN,MAAS,CACP,SAAY,aAEb,iCAAGA,WAAW,MAAS,CACtB,KAAQ,aACR,aAAc,sBACd,UAAa,kBACZ,mCAAKA,WAAW,KAAQ,CACvB,cAAe,OACf,UAAa,QACb,OAAU,KACV,QAAW,MACX,QAAW,YACX,MAAS,OACR,oCAAMA,WAAW,OAAU,CAC1B,SAAY,UACZ,EAAK,qVAlBb,aAoBA,sDAAmC,4BAAYA,WAAW,KAAvB,UAAnC,eAAqG,iCAAGA,WAAW,KAAQ,CACvH,KAAQ,+BADyF,OAArG,4CAGA,yBAAK,oCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,mSAYL,mBAAQ,CACN,GAAM,WACN,MAAS,CACP,SAAY,aAEb,iCAAGA,WAAW,MAAS,CACtB,KAAQ,YACR,aAAc,qBACd,UAAa,kBACZ,mCAAKA,WAAW,KAAQ,CACvB,cAAe,OACf,UAAa,QACb,OAAU,KACV,QAAW,MACX,QAAW,YACX,MAAS,OACR,oCAAMA,WAAW,OAAU,CAC1B,SAAY,UACZ,EAAK,qVAlBb,YAoBA,8BAAW,4BAAYA,WAAW,KAAvB,YAAX,mFAKJJ,EAAWK,gBAAiB","file":"component---src-pages-clients-web-react-mdx-f33ba90fe9b3ec780155.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/jacdac-ts/jacdac-ts/docs/src/components/layout.tsx\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"react\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h1\" {...{\n        \"href\": \"#react\",\n        \"aria-label\": \"react permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`React`}</h1>\n    <p>{`JACDAC is compatible with React 16+ and hooks`}</p>\n    <h2 {...{\n      \"id\": \"jacdaccontext\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#jacdaccontext\",\n        \"aria-label\": \"jacdaccontext permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`JACDACContext`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`JACDACContext`}</inlineCode>{` provides access to the bus, and connection/disconnection functionalies from your hooks or components.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import { JACDACContext } from \"jacdac\";\n\nfunction myComponent() {\n    const { bus, connectionState, connectAsync, disconnectAsync } = useContext(JACDACContext)\n\n    return <div>\n            <span>{bus.devices().length} devices</span>\n            <span>{connectionState}</span>\n            <button onClick={connectAsync}>connect</button>\n            <button onClick={disconnectAsync}>disconnect</button>\n        </div>\n}\nexport default MyComponent;\n`}</code></pre>\n    <p>{`You can also use the react syntax to use this context.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<JACDACContext.Consumer>\n{({bus, connectionState, connectAsync, disconnectAsync}) => ...}\n</JACDACContext.Consumer>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"usechange\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#usechange\",\n        \"aria-label\": \"usechange permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`useChange`}</h2>\n    <p>{`This hook subscribes to the `}<inlineCode parentName=\"p\">{`CHANGE`}</inlineCode>{` event of a `}<a parentName=\"p\" {...{\n        \"href\": \"/jacdac-ts/clients/web/dom\"\n      }}>{`DOM`}</a>{` node to automatically refresh the view.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import { JACDACContext, useChange } from \"jacdac\";\n\nconst DeviceList = () => {\n    const { bus } = useContext(JACDACContext)\n    // useChange will automatically re-render \n    // when bus emits a \\`\\`CHANGE\\`\\` event\n    const devices = useChange(bus, n => n.devices(}))\n    ...\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"usequery\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#usequery\",\n        \"aria-label\": \"usequery permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`useQuery`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`useQuery`}</inlineCode>{` hook allows to issue subscribeable queries for the GraphQL backend of JACDAC.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}