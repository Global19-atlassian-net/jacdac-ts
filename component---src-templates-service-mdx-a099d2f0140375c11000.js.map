{"version":3,"sources":["webpack:///./src/components/ServiceSpecificationSource.tsx","webpack:///./src/components/EnumSpecification.tsx","webpack:///./src/components/ServiceSpecification.tsx","webpack:///./src/templates/service.mdx","webpack:///./src/components/Page.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","flexGrow","backgroundColor","palette","background","paper","marginBottom","spacing","pre","margin","padding","whiteSpec","ServiceSpecificationSource","props","classIdentifier","serviceSpecification","showSpecification","classes","useState","tab","setTab","spec","serviceSpecificationFromClassIdentifier","convs","converters","showDTDL","camelName","index","className","Paper","square","Tabs","value","onChange","event","newValue","aria-label","filter","n","map","i","Tab","key","label","a11yProps","TabPanel","ServiceSpecification","service","lang","Snippet","mode","JSON","stringify","serviceSpecificationToDTDL","download","shortId","url","DTMIToRoute","serviceSpecificationDTMI","caption","to","EnumSpecification","serviceClass","enums","Object","values","length","e","name","isFlags","Chip","size","keys","members","en","toString","node","showSource","showDevices","registers","packets","isRegister","events","isEvent","commands","isCommand","reports","r","secondary","pipeReports","isPipeReport","others","indexOf","reportOf","pkt","find","rep","isReportOf","pipeReportOf","isPipeReportOf","Box","ml","component","IDChip","id","ServiceSpecificationStatusAlert","specification","Markdown","source","notes","short","extends","extend","serviceSpecificationFromName","long","note","group","sort","l","derived","PacketSpecification","packetInfo","reportInfo","pipeReportInfo","DeviceSpecificationList","requiredServiceClasses","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","pageContext","parentName","href","isMDXComponent","Page","children"],"mappings":"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","file":"component---src-templates-service-mdx-a099d2f0140375c11000.js","sourcesContent":["import React, { useState } from 'react';\n// tslint:disable-next-line: no-submodule-imports\nimport Tabs from '@material-ui/core/Tabs';\n// tslint:disable-next-line: no-submodule-imports\nimport Tab from '@material-ui/core/Tab';\nimport { serviceSpecificationFromClassIdentifier } from '../../../src/jdom/spec';\nimport { Paper, createStyles, makeStyles, Theme } from '@material-ui/core';\nimport TabPanel, { a11yProps } from './ui/TabPanel';\nimport Snippet from './ui/Snippet';\nimport { converters } from '../../../jacdac-spec/spectool/jdspec'\nimport ServiceSpecification from './ServiceSpecification';\nimport { DTMIToRoute, serviceSpecificationDTMI, serviceSpecificationToDTDL } from '../../../src/azure-iot/dtdl'\nimport { Link } from 'gatsby-theme-material-ui';\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n        marginBottom: theme.spacing(1)\n    },\n    pre: {\n        margin: \"0\",\n        padding: \"0\",\n        backgroundColor: \"transparent\",\n        whiteSpec: \"pre-wrap\"\n    }\n}));\n\nexport default function ServiceSpecificationSource(props: {\n    classIdentifier?: number,\n    serviceSpecification?: jdspec.ServiceSpec,\n    showSpecification?: boolean\n}) {\n    const { classIdentifier, serviceSpecification, showSpecification } = props;\n    const classes = useStyles();\n    const [tab, setTab] = useState(0);\n    const spec = serviceSpecification || serviceSpecificationFromClassIdentifier(classIdentifier)\n    const convs = converters();\n    const showDTDL = spec?.camelName !== \"system\"\n\n    const handleTabChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n        setTab(newValue);\n    };\n\n    let index = 0;\n    return (\n        <div className={classes.root}>\n            <Paper square>\n                <Tabs value={tab} onChange={handleTabChange} aria-label=\"View specification formats\">\n                    {[\n                        showSpecification && \"Specification\",\n                        \"MakeCode\",\n                        \"TypeScript\",\n                        \"C\",\n                        \"JSON\",\n                        showDTDL && \"Module Twin\"\n                    ]\n                        .filter(n => !!n)\n                        .map((n, i) => <Tab key={n} label={n} {...a11yProps(i)} />)}\n                </Tabs>\n                {showSpecification && <TabPanel key=\"spec\" value={tab} index={index++}>\n                    <ServiceSpecification service={spec} />\n                </TabPanel>}\n                {[\"sts\", \"ts\", \"c\", \"json\"].map((lang, i) =>\n                    <TabPanel key={`conv${lang}`} value={tab} index={index++}>\n                        <Snippet value={() => convs[lang](spec)} mode={lang} />\n                    </TabPanel>)}\n                {showDTDL && <TabPanel key=\"dtdl\" value={tab} index={index++}>\n                    <Snippet value={() => JSON.stringify(serviceSpecificationToDTDL(spec), null, 2)} mode={\"json\"}\n                        download={`dtmi-${spec.shortId}.json`}\n                        url={\"/\" + DTMIToRoute(serviceSpecificationDTMI(spec))}\n                        caption={<><Link to=\"/dtmi\">DTDL</Link> is an open source modelling language developed by Microsoft Azure.</>} />\n                </TabPanel>}\n            </Paper>\n        </div>\n    );\n}\n","import React, { Fragment } from \"react\"\nimport { serviceSpecificationFromClassIdentifier } from \"../../../src/jdom/spec\"\nimport { Chip } from \"@material-ui/core\"\n\nexport default function EnumSpecification(props: { serviceClass: number }) {\n    const { serviceClass } = props\n    const spec = serviceSpecificationFromClassIdentifier(serviceClass)\n    const enums = Object.values(spec?.enums || {})\n    if (!enums.length)\n        return <></>\n\n    return <Fragment>\n        <h2>Enums</h2>\n        {enums.map(e => <Fragment key={e.name}>\n        <h3>{e.name} {e.isFlags && <Chip label=\"flags\" size=\"small\" />}</h3>\n            <ul>\n                {Object.keys(e.members).map(en => <li key={en}>{en}: <code>0x{e.members[en].toString(16)}</code></li>)}\n            </ul>\n            </Fragment>)}\n    </Fragment>\n}\n","import React, { Fragment } from \"react\";\nimport { Link } from 'gatsby-theme-material-ui';\nimport { serviceSpecificationFromName, isRegister, isEvent, isCommand, isPipeReport, isReportOf, isPipeReportOf, deviceSpecificationsForService } from \"../../../src/jdom/spec\"\nimport PacketSpecification from \"../components/PacketSpecification\"\nimport IDChip from \"./IDChip\";\nimport ServiceSpecificationSource from \"./ServiceSpecificationSource\"\nimport Markdown from \"./ui/Markdown\";\nimport EnumSpecification from \"./EnumSpecification\";\nimport { Box } from \"@material-ui/core\";\nimport ServiceSpecificationStatusAlert from \"./ServiceSpecificationStatusAlert\"\nimport DeviceSpecificationList from \"./DeviceSpecificationList\"\n\nexport default function ServiceSpecification(props: {\n    service: jdspec.ServiceSpec,\n    showSource?: boolean,\n    showDevices?: boolean\n}) {\n    const { service: node, showSource, showDevices } = props;\n    const registers = node.packets.filter(isRegister)\n    const events = node.packets.filter(isEvent)\n    const commands = node.packets.filter(isCommand)\n    const reports = node.packets.filter(r => r.secondary)\n    const pipeReports = node.packets.filter(isPipeReport)\n    const others = node.packets.filter(r => registers.indexOf(r) < 0\n        && events.indexOf(r) < 0\n        && commands.indexOf(r) < 0\n        && reports.indexOf(r) < 0\n        && pipeReports.indexOf(r) < 0\n    )\n\n    const reportOf = (pkt: jdspec.PacketInfo) => reports.find(rep => isReportOf(pkt, rep))\n    const pipeReportOf = (pkt: jdspec.PacketInfo) => pipeReports.find(rep => isPipeReportOf(pkt, rep))\n\n    return (<Fragment key={`servicespec${node.shortId}`}>\n        <h1 key=\"title\">{node.name}\n            <Box ml={1} component=\"span\">\n                <IDChip id={node.classIdentifier} filter={`srv:${node.shortId}`} />\n            </Box>\n        </h1>\n        <ServiceSpecificationStatusAlert specification={node} />\n        <Markdown key=\"notesshort\" source={node.notes.short} />\n        {!!node.extends?.length &&\n            <p key=\"extends\">\n                <span>Extends </span>\n                {node.extends.map((extend, i) => <Fragment key={`extend${extend}`}>\n                    {i > 0 && <span>, </span>}\n                    <Link key={`extend${extend}`} to={`/services/${extend}/`}>{serviceSpecificationFromName(extend).name}</Link>\n                </Fragment>)}\n    .\n    </p>}\n        <Markdown key=\"noteslong\" source={node.notes.long || \"\"} />\n        <EnumSpecification key=\"enums\" serviceClass={node.classIdentifier} />\n        {[\n            { name: \"Registers\", packets: registers, note: node.notes[\"registers\"] },\n            { name: \"Events\", packets: events, note: node.notes[\"events\"] },\n            { name: \"Commands\", packets: commands, note: node.notes[\"commands\"] },\n            { name: \"Others\", packets: others, note: node.notes[\"others\"] }\n        ].filter(group => group.packets.length)\n            .map(group => <Fragment key={`group${group.name}`}>\n                <h2>{group.name}</h2>\n                {group.note && <Markdown key={`node${group.name}`} source={group.note} />}\n                {group.packets\n                    .sort((l,r) => (l.derived ? 1 : -1) - (r.derived ? 1 : -1))\n                    .map((pkt, i) => <PacketSpecification\n                        key={`pkt${pkt.name}`}\n                        serviceClass={node.classIdentifier}\n                        packetInfo={pkt}\n                        reportInfo={reportOf(pkt)}\n                        pipeReportInfo={pipeReportOf(pkt)}\n                        showDevices={true}\n                    />)}\n            </Fragment>)\n        }\n        {showDevices && <Fragment key=\"devices\">\n            <h2>Registered Devices</h2>\n            <DeviceSpecificationList requiredServiceClasses={[node.classIdentifier]} />\n        </Fragment>}\n        {showSource && <Fragment key=\"specs\">\n            <h2 key=\"spech2\">Exports</h2>\n            <ServiceSpecificationSource key=\"source\"\n                classIdentifier={node.classIdentifier}\n                showSpecification={false}\n            />\n        </Fragment>}\n    </Fragment>\n    )\n}","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/jacdac-ts/jacdac-ts/docs/src/components/Page.tsx\";\nimport { Link } from 'gatsby-theme-material-ui';\nimport { serviceSpecificationFromClassIdentifier } from \"../../../src/jdom/spec\";\nimport ServiceSpecification from \"../components/ServiceSpecification\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <ServiceSpecification service={serviceSpecificationFromClassIdentifier(props.pageContext.node.classIdentifier)} showSource={true} showDevices={true} mdxType=\"ServiceSpecification\" />\n    <h2 {...{\n      \"id\": \"see-also\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#see-also\",\n        \"aria-label\": \"see also permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`See Also`}</h2>\n    <ul>\n    <li><a href={`https://github.com/microsoft/jacdac/tree/main/services/${props.pageContext.node.shortId}.md`}>Edit specification source</a>.</li>\n    <li>Read <Link to=\"/reference/service-specification\" mdxType=\"Link\">Service Specification Language</Link> reference</li>\n    <li>Create a new service specification using the <Link to=\"/tools/service-editor\" mdxType=\"Link\">Service Editor</Link></li>\n    <li>Using services in JavaScript with the <Link to={`/clients/web/jdom`} mdxType=\"Link\">JACDAC Object Model (JDOM)</Link></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React, { Fragment } from \"react\";\n\nconst Page = ({ props, children }) => {\n    return <Fragment {...props}>{children}</Fragment>\n}\n\nexport default Page;"],"sourceRoot":""}