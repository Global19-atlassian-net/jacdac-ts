{"version":3,"sources":["webpack:///./src/pages/sandbox.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","checkboxes","serviceFilter","srv","serviceClass","specification","packets","some","p","identifierName","registerFilter","r","isMDXComponent"],"mappings":"wPAOaA,EAAe,GACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,cAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iCACA,cAAC,IAAD,CAASC,WAAY,CAAC,WAAY,SAAU,UAAW,SAAUC,cAAe,SAAAC,GAAG,OAAyB,IAArBA,EAAIC,cAA2C,YAArBD,EAAIC,cAA6BJ,QAAQ,YAC1J,uCACA,cAAC,IAAD,CAASC,WAAY,CAAC,UAAWC,cAAe,SAAAC,GAAG,uBAAIA,EAAIE,qBAAR,aAAI,EAAmBC,QAAQC,MAAK,SAAAC,GAAC,MAAyB,YAArBA,EAAEC,mBAA+BC,eAAgB,SAAAC,GAAC,OAAI,GAAOX,QAAQ,YACjK,oCACA,cAAC,IAAD,CAASC,WAAY,CAAC,UAAWC,cAAe,SAAAC,GAAG,uBAAIA,EAAIE,qBAAR,aAAI,EAAmBC,QAAQC,MAAK,SAAAC,GAAC,MAAyB,YAArBA,EAAEC,mBAA+BC,eAAgB,SAAAC,GAAC,OAAI,GAAOX,QAAQ,aAKrKH,EAAWe,gBAAiB","file":"component---src-pages-sandbox-mdx-0be9c5b6e3042368afc8.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/jacdac-ts/jacdac-ts/docs/src/components/layout.tsx\";\nimport DomTree from \"../components/DomTreeView\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <p>{`A tree`}</p>\n    <DomTree checkboxes={[\"register\", \"device\", \"service\", \"event\"]} serviceFilter={srv => srv.serviceClass !== 0 && srv.serviceClass !== 0x12dc1fca} mdxType=\"DomTree\" />\n    <p>{`Another tree`}</p>\n    <DomTree checkboxes={[\"device\"]} serviceFilter={srv => srv.specification?.packets.some(p => p.identifierName === \"reading\")} registerFilter={r => false} mdxType=\"DomTree\" />\n    <p>{`streamers`}</p>\n    <DomTree checkboxes={[\"device\"]} serviceFilter={srv => srv.specification?.packets.some(p => p.identifierName === \"reading\")} registerFilter={r => false} mdxType=\"DomTree\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}