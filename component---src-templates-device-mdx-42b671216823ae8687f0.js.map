{"version":3,"sources":["webpack:///./src/components/DeviceDTDLSnippet.tsx","webpack:///./src/components/DeviceSpecificationSource.tsx","webpack:///./src/components/DeviceSpecification.tsx","webpack:///./src/templates/device.mdx"],"names":["DeviceDTDLSnippet","props","dev","dtdl","useMemo","JSON","stringify","deviceSpecificationToDTDL","services","Snippet","value","mode","download","name","useStyles","makeStyles","theme","createStyles","root","flexGrow","backgroundColor","palette","background","paper","marginBottom","spacing","pre","margin","padding","whiteSpec","DeviceSpecificationSource","deviceSpecification","showSpecification","showDTDL","showJSON","classes","useState","tab","setTab","spec","index","className","Paper","square","Tabs","onChange","event","newValue","aria-label","filter","n","map","i","Tab","key","label","a11yProps","TabPanel","DeviceSpecification","device","showSource","gridBreakpoints","useGridBreakpoints","to","link","Typography","variant","identifierToUrlPath","escapeDeviceIdentifier","company","alt","src","imageDeviceOf","description","Markdown","source","repo","FirmwareCard","slug","firmwares","length","firmware","IDChip","id","toString","Grid","container","sc","serviceSpecificationFromClassIdentifier","item","shortId","ServiceSpecificationCard","specification","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","deviceSpecificationFromIdentifier","pageContext","node","parentName","isMDXComponent"],"mappings":"qbAIO,SAASA,EAAkBC,GAAmC,IACzDC,EAAQD,EAARC,IAEFC,EAAOC,mBACT,kBAAMC,KAAKC,UAAUC,YAA0BL,EAAK,CAAEM,UAAU,IAAS,KAAM,KAC/E,CAACN,IAEL,OAAO,kBAACO,EAAA,EAAD,CAASC,MAAOP,EAAMQ,KAAK,OAAOC,SAAaV,EAAIW,KAAT,UCCrD,IAAMC,EAAYC,aAAW,SAACC,GAAD,OAAkBC,YAAa,CACxDC,KAAM,CACFC,SAAU,EACVC,gBAAiBJ,EAAMK,QAAQC,WAAWC,MAC1CC,aAAcR,EAAMS,QAAQ,IAEhCC,IAAK,CACDC,OAAQ,IACRC,QAAS,IACTR,gBAAiB,cACjBS,UAAW,iBAIJ,SAASC,EAA0B7B,GAK/C,IACS8B,EAA+D9B,EAA/D8B,oBAAqBC,EAA0C/B,EAA1C+B,kBAAmBC,EAAuBhC,EAAvBgC,SAAUC,EAAajC,EAAbiC,SACpDC,EAAUrB,IAFjB,EAGuBsB,mBAAS,GAAxBC,EAHR,KAGaC,EAHb,KAIOC,EAAOR,EAMTS,EAAQ,EACZ,OACI,yBAAKC,UAAWN,EAAQjB,MACpB,kBAACwB,EAAA,EAAD,CAAOC,QAAM,GACT,kBAACC,EAAA,EAAD,CAAMlC,MAAO2B,EAAKQ,SARN,SAACC,EAA8BC,GACnDT,EAAOS,IAO8CC,aAAW,8BACnD,CACGhB,GAAqB,gBACrBE,GAAY,OACZD,GAAY,QACdgB,QAAO,SAAAC,GAAC,QAAMA,KACXC,KAAI,SAACD,EAAGE,GAAJ,OAAU,kBAACC,EAAA,EAAD,eAAKC,IAAKJ,EAAGK,MAAOL,GAAOM,YAAUJ,SAE3DpB,GAAqB,kBAACyB,EAAA,EAAD,CAAUH,IAAI,OAAO5C,MAAO2B,EAAKG,MAAOA,KAC1D,kBAACkB,EAAD,CAAqBC,OAAQpB,KAEhCL,GAAY,kBAACuB,EAAA,EAAD,CAAUH,IAAG,WAAc5C,MAAO2B,EAAKG,MAAOA,KACvD,kBAAC/B,EAAA,EAAD,CAASC,MAAOL,KAAKC,UAAUiC,EAAM,KAAM,GAAI5B,KAAM,UAExDsB,GAAY,kBAACwB,EAAA,EAAD,CAAUH,IAAI,OAAO5C,MAAO2B,EAAKG,MAAOA,KACjD,kBAACxC,EAAD,CAAmBE,IAAK6B,O,4BChD7B,SAAS2B,EAAoBzD,GAA2D,IAC3F0D,EAAuB1D,EAAvB0D,OAAQC,EAAe3D,EAAf2D,WACVC,EAAkBC,cAExB,OAAO,oCACH,wBAAIR,IAAI,SACJ,kBAAC,OAAD,CAAMS,GAAIJ,EAAOK,MAAOL,EAAO9C,OAEnC,kBAACoD,EAAA,EAAD,CAAYC,QAAQ,aAApB,MAAmC,kBAAC,OAAD,CAAMH,GAAE,YAAcI,YAAoBC,YAAuBT,EAAOU,WAAcV,EAAOU,UAC/H,yBAAKC,IAAI,sBAAsBC,IAAKC,YAAcb,KAClDA,EAAOc,aAAe,kBAACC,EAAA,EAAD,CAAUC,OAAQhB,EAAOc,cAC/Cd,EAAOiB,MAAQ,kBAACC,EAAA,EAAD,CAAcC,KAAMnB,EAAOiB,SACxCjB,EAAOoB,UAAUC,QAAU,oCAAE,oDAC5B,4BACKrB,EAAOoB,UAAU5B,KAAI,SAAA8B,GAAQ,OAAI,wBAAI3B,IAAK2B,GAAU,kBAACC,EAAA,EAAD,CAAQC,GAAIF,EAAUhC,OAAM,QAAUgC,EAASG,SAAS,YAErH,wCACA,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAAC7D,QAAS,GACpBkC,EAAOnD,SAAS2C,KAAI,SAAAoC,GAAE,OAAIC,YAAwCD,MAC9DpC,KAAI,SAAAZ,GAAI,OAAI,kBAAC8C,EAAA,EAAD,eAAMI,MAAI,EAACnC,IAAKf,EAAKmD,SAAa7B,GAC3C,kBAAC8B,EAAA,EAAD,CAA0BC,cAAerD,SAGpDqB,GAAc,oCACX,6CACA,kBAAC9B,EAAD,CAA2BC,oBAAqB4B,EAC5CzB,UAAU,EAAMD,UAAU,MC3BnC,IAAM4D,EAAe,GACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGjG,EACF,8BACD,OAAO,cAAC8F,EAAD,iBAAeD,EAAiB7F,EAAhC,CAAuCiG,WAAYA,EAAYC,QAAQ,cAK5E,cAACzC,EAAD,CAAqBC,OAAQyC,YAAkCnG,EAAMoG,YAAYC,KAAKnB,IAAKvB,YAAY,EAAMuC,QAAQ,wBACrH,mBAAQ,CACN,GAAM,WACN,MAAS,CACP,SAAY,aAEb,iCAAGI,WAAW,MAAS,CACtB,KAAQ,YACR,aAAc,qBACd,UAAa,kBACZ,mCAAKA,WAAW,KAAQ,CACvB,cAAe,OACf,UAAa,QACb,OAAU,KACV,QAAW,MACX,QAAW,YACX,MAAS,OACR,oCAAMA,WAAW,OAAU,CAC1B,SAAY,UACZ,EAAK,qVAlBb,YAoBA,wBACE,oBAAIA,WAAW,MAAK,iCAAGA,WAAW,MAAS,CACvC,KAAQ,2CADQ,sBAGpB,oBAAIA,WAAW,MAAK,iCAAGA,WAAW,MAAS,CACvC,KAAQ,qCADQ,sBAQ1BN,EAAWO,gBAAiB","file":"component---src-templates-device-mdx-42b671216823ae8687f0.js","sourcesContent":["import React, { useMemo } from \"react\";\nimport { deviceSpecificationToDTDL } from \"../../../src/azure-iot/dtdl\";\nimport Snippet from \"./Snippet\";\n\nexport function DeviceDTDLSnippet(props: { dev: jdspec.DeviceSpec }) {\n    const { dev } = props;\n\n    const dtdl = useMemo<string>(\n        () => JSON.stringify(deviceSpecificationToDTDL(dev, { services: true }), null, 2),\n        [dev]);\n\n    return <Snippet value={dtdl} mode=\"json\" download={`${dev.name}.json`} />\n}","import React, { useMemo, useState } from 'react';\n// tslint:disable-next-line: no-submodule-imports\nimport Tabs from '@material-ui/core/Tabs';\n// tslint:disable-next-line: no-submodule-imports\nimport Tab from '@material-ui/core/Tab';\nimport { Paper, createStyles, makeStyles, Theme } from '@material-ui/core';\nimport TabPanel, { a11yProps } from './TabPanel';\nimport Snippet from './Snippet';\nimport DeviceSpecification from './DeviceSpecification';\nimport { DeviceDTDLSnippet } from './DeviceDTDLSnippet';\nimport { deviceSpecificationToMarkdown } from '../../../src/jdom/spec';\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n        marginBottom: theme.spacing(1)\n    },\n    pre: {\n        margin: \"0\",\n        padding: \"0\",\n        backgroundColor: \"transparent\",\n        whiteSpec: \"pre-wrap\"\n    }\n}));\n\nexport default function DeviceSpecificationSource(props: {\n    deviceSpecification?: jdspec.DeviceSpec,\n    showSpecification?: boolean,\n    showDTDL?: boolean,\n    showJSON?: boolean\n}) {\n    const { deviceSpecification, showSpecification, showDTDL, showJSON } = props;\n    const classes = useStyles();\n    const [tab, setTab] = useState(0);\n    const spec = deviceSpecification\n\n    const handleTabChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n        setTab(newValue);\n    };\n\n    let index = 0;\n    return (\n        <div className={classes.root}>\n            <Paper square>\n                <Tabs value={tab} onChange={handleTabChange} aria-label=\"View specification formats\">\n                    {[\n                        showSpecification && \"Specification\",\n                        showJSON && \"JSON\",\n                        showDTDL && \"DTDL\",\n                    ].filter(n => !!n)\n                        .map((n, i) => <Tab key={n} label={n} {...a11yProps(i)} />)}\n                </Tabs>\n                {showSpecification && <TabPanel key=\"spec\" value={tab} index={index++}>\n                    <DeviceSpecification device={spec} />\n                </TabPanel>}\n                {showJSON && <TabPanel key={`convjson`} value={tab} index={index++}>\n                    <Snippet value={JSON.stringify(spec, null, 2)} mode={\"json\"} />\n                </TabPanel>}\n                {showDTDL && <TabPanel key=\"dtdl\" value={tab} index={index++}>\n                    <DeviceDTDLSnippet dev={deviceSpecification} />\n                </TabPanel>}\n            </Paper>\n        </div>\n    );\n}\n","import React from \"react\"\nimport IDChip from \"./IDChip\";\nimport { Link } from 'gatsby-theme-material-ui';\nimport { identifierToUrlPath, imageDeviceOf, serviceSpecificationFromClassIdentifier } from \"../../../src/jdom/spec\"\nimport ServiceSpecificationCard from \"./ServiceSpecificationCard\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport useGridBreakpoints from \"./useGridBreakpoints\";\nimport Markdown from \"./Markdown\";\nimport DeviceSpecificationSource from \"./DeviceSpecificationSource\";\nimport FirmwareCard from \"./FirmwareCard\"\nimport { escapeDeviceIdentifier } from \"../../../jacdac-spec/spectool/jdspec\"\n\nexport default function DeviceSpecification(props: { device: jdspec.DeviceSpec, showSource?: string }) {\n    const { device, showSource } = props;\n    const gridBreakpoints = useGridBreakpoints();\n\n    return <>\n        <h2 key=\"title\">\n            <Link to={device.link}>{device.name}</Link>\n        </h2>\n        <Typography variant=\"subtitle1\">by <Link to={`/devices/${identifierToUrlPath(escapeDeviceIdentifier(device.company))}`}>{device.company}</Link></Typography>\n        {<img alt=\"image of the device\" src={imageDeviceOf(device)} />}\n        {device.description && <Markdown source={device.description} />}\n        {device.repo && <FirmwareCard slug={device.repo} />}\n        {!!device.firmwares.length && <><h3>Firmware identifiers</h3>\n            <ul>\n                {device.firmwares.map(firmware => <li key={firmware}><IDChip id={firmware} filter={`fw:0x${firmware.toString(16)}`} /></li>)}\n            </ul></>}\n        <h3>Services</h3>\n        <Grid container spacing={2}>\n            {device.services.map(sc => serviceSpecificationFromClassIdentifier(sc))\n                .map(spec => <Grid item key={spec.shortId} {...gridBreakpoints}>\n                    <ServiceSpecificationCard specification={spec} />\n                </Grid>)}\n        </Grid>\n        {showSource && <>\n            <h2>Specification</h2>\n            <DeviceSpecificationSource deviceSpecification={device}\n                showJSON={true} showDTDL={true} />\n        </>}\n    </>\n}\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/jacdac-ts/jacdac-ts/docs/src/components/layout.tsx\";\nimport { Link } from 'gatsby-theme-material-ui';\nimport { deviceSpecificationFromIdentifier } from \"../../../src/jdom/spec\";\nimport DeviceSpecification from \"../components/DeviceSpecification\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <DeviceSpecification device={deviceSpecificationFromIdentifier(props.pageContext.node.id)} showSource={true} mdxType=\"DeviceSpecification\" />\n    <h2 {...{\n      \"id\": \"see-also\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#see-also\",\n        \"aria-label\": \"see also permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`See Also`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/jacdac-ts/reference/device-definition\"\n        }}>{`device definition`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/jacdac-ts/tools/device-designer\"\n        }}>{`device designer`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}