{
  "name": "Weight Scale",
  "status": "experimental",
  "shortId": "weightscale",
  "camelName": "weightScale",
  "shortName": "weightScale",
  "extends": [
    "_base",
    "_sensor"
  ],
  "notes": {
    "short": "A weight measuring sensor."
  },
  "classIdentifier": 525160512,
  "enums": {
    "Variant": {
      "name": "Variant",
      "storage": 4,
      "members": {
        "Body": 1,
        "Food": 2,
        "Jewelry": 3
      }
    }
  },
  "packets": [
    {
      "kind": "ro",
      "name": "status_code",
      "identifier": 259,
      "description": "Reports the current state or error status of the device. ``code`` is a standardized value from \nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\nstate. This report is typically not queried, when a device has an error, it will typically\nadd this report in frame along with the announce packet.",
      "fields": [
        {
          "name": "code",
          "unit": "",
          "type": "u16",
          "storage": 2,
          "isSimpleType": true
        },
        {
          "name": "vendor_code",
          "unit": "",
          "type": "u16",
          "storage": 2,
          "isSimpleType": true
        }
      ],
      "optional": true,
      "identifierName": "status_code",
      "packFormat": "u16 u16",
      "derived": "_base"
    },
    {
      "kind": "event",
      "name": "status_code_changed",
      "identifier": 4,
      "description": "Notifies that the status code of the service changed.",
      "fields": [
        {
          "name": "code",
          "unit": "",
          "type": "u16",
          "storage": 2,
          "isSimpleType": true
        },
        {
          "name": "vendor_code",
          "unit": "",
          "type": "u16",
          "storage": 2,
          "isSimpleType": true
        }
      ],
      "optional": true,
      "identifierName": "status_code_changed",
      "packFormat": "u16 u16",
      "derived": "_base"
    },
    {
      "kind": "const",
      "name": "instance_name",
      "identifier": 265,
      "description": "A friendly name that describes the role of this service instance in the device.\nIt often corresponds to what's printed on the device:\nfor example, `A` for button A, or `S0` for servo channel 0.\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).",
      "fields": [
        {
          "name": "_",
          "unit": "",
          "type": "string",
          "storage": 0
        }
      ],
      "optional": true,
      "identifierName": "instance_name",
      "packFormat": "s",
      "derived": "_base"
    },
    {
      "kind": "rw",
      "name": "streaming_samples",
      "identifier": 3,
      "description": "Asks device to stream a given number of samples\n(clients will typically write `255` to this register every second or so, while streaming is required).",
      "fields": [
        {
          "name": "_",
          "unit": "",
          "type": "u8",
          "storage": 1,
          "isSimpleType": true
        }
      ],
      "internal": true,
      "identifierName": "streaming_samples",
      "packFormat": "u8",
      "derived": "_sensor"
    },
    {
      "kind": "rw",
      "name": "streaming_interval",
      "identifier": 4,
      "description": "Period between packets of data when streaming in milliseconds.",
      "fields": [
        {
          "name": "_",
          "unit": "ms",
          "type": "u32",
          "storage": 4,
          "isSimpleType": true,
          "defaultValue": 100,
          "typicalMin": 1,
          "typicalMax": 60000
        }
      ],
      "identifierName": "streaming_interval",
      "packFormat": "u32",
      "derived": "_sensor"
    },
    {
      "kind": "const",
      "name": "streaming_preferred_interval",
      "identifier": 258,
      "description": "Preferred default streaming interval for sensor in milliseconds.",
      "fields": [
        {
          "name": "_",
          "unit": "ms",
          "type": "u32",
          "storage": 4,
          "isSimpleType": true
        }
      ],
      "internal": true,
      "optional": true,
      "identifierName": "streaming_preferred_interval",
      "packFormat": "u32",
      "derived": "_sensor"
    },
    {
      "kind": "ro",
      "name": "weight",
      "identifier": 257,
      "description": "The reported weight.",
      "fields": [
        {
          "name": "_",
          "unit": "kg",
          "shift": 16,
          "type": "u16.16",
          "storage": 4
        }
      ],
      "identifierName": "reading",
      "packFormat": "u16.16"
    },
    {
      "kind": "ro",
      "name": "weight_error",
      "identifier": 262,
      "description": "The estimate error on the reported reading.",
      "fields": [
        {
          "name": "_",
          "unit": "kg",
          "shift": 16,
          "type": "u16.16",
          "storage": 4
        }
      ],
      "optional": true,
      "identifierName": "reading_error",
      "packFormat": "u16.16"
    },
    {
      "kind": "rw",
      "name": "zero_offset",
      "identifier": 128,
      "description": "Calibrated zero offset error on the scale, i.e. the measured weight when nothing is on the scale.\nYou do not need to subtract that from the reading, it has already been done.",
      "fields": [
        {
          "name": "_",
          "unit": "kg",
          "shift": 16,
          "type": "u16.16",
          "storage": 4
        }
      ],
      "optional": true,
      "packFormat": "u16.16"
    },
    {
      "kind": "rw",
      "name": "gain",
      "identifier": 129,
      "description": "Calibrated gain on the weight scale error.",
      "fields": [
        {
          "name": "_",
          "unit": "",
          "shift": 16,
          "type": "u16.16",
          "storage": 4
        }
      ],
      "optional": true,
      "packFormat": "u16.16"
    },
    {
      "kind": "const",
      "name": "max_weight",
      "identifier": 261,
      "description": "Maximum supported weight on the scale.",
      "fields": [
        {
          "name": "_",
          "unit": "kg",
          "shift": 16,
          "type": "u16.16",
          "storage": 4
        }
      ],
      "optional": true,
      "identifierName": "max_reading",
      "packFormat": "u16.16"
    },
    {
      "kind": "const",
      "name": "min_weight",
      "identifier": 260,
      "description": "Minimum recommend weight on the scale.",
      "fields": [
        {
          "name": "_",
          "unit": "kg",
          "shift": 16,
          "type": "u16.16",
          "storage": 4
        }
      ],
      "optional": true,
      "identifierName": "min_reading",
      "packFormat": "u16.16"
    },
    {
      "kind": "const",
      "name": "weight_resolution",
      "identifier": 264,
      "description": "Smallest, yet distinguishable change in reading.",
      "fields": [
        {
          "name": "_",
          "unit": "kg",
          "shift": 16,
          "type": "u16.16",
          "storage": 4
        }
      ],
      "optional": true,
      "identifierName": "reading_resolution",
      "packFormat": "u16.16"
    },
    {
      "kind": "const",
      "name": "variant",
      "identifier": 263,
      "description": "The type of physical scale",
      "fields": [
        {
          "name": "_",
          "unit": "",
          "type": "Variant",
          "storage": 4
        }
      ],
      "optional": true,
      "identifierName": "variant",
      "packFormat": "u32"
    },
    {
      "kind": "command",
      "name": "calibrate_zero_offset",
      "identifier": 128,
      "description": "Call this command when there is nothing on the scale. If supported, the module should save the calibration data.",
      "fields": []
    },
    {
      "kind": "command",
      "name": "calibrate_gain",
      "identifier": 129,
      "description": "Call this command with the weight of the thing on the scale.",
      "fields": [
        {
          "name": "weight",
          "unit": "g",
          "shift": 10,
          "type": "u22.10",
          "storage": 4
        }
      ],
      "packFormat": "u22.10"
    }
  ],
  "source": "# Weight Scale\n\n    identifier: 0x1f4d5040\n    extends: _sensor\n\nA weight measuring sensor.\n\n## Registers\n\n    ro weight: u16.16 kg @ reading\n\nThe reported weight.\n\n    ro weight_error?: u16.16 kg @ reading_error\n\nThe estimate error on the reported reading.\n\n    rw zero_offset?: u16.16 kg @ 0x80\n    \nCalibrated zero offset error on the scale, i.e. the measured weight when nothing is on the scale.\nYou do not need to subtract that from the reading, it has already been done.\n\n    rw gain?: u16.16 @ 0x81\n\nCalibrated gain on the weight scale error.\n\n    const max_weight?: u16.16 kg @ max_reading\n\nMaximum supported weight on the scale.\n\n    const min_weight?: u16.16 kg @ min_reading\n\nMinimum recommend weight on the scale.\n\n    const weight_resolution?: u16.16 kg @ reading_resolution\n\nSmallest, yet distinguishable change in reading.\n\n    enum Variant: u32 {\n        Body = 1\n        Food = 2\n        Jewelry = 3\n    }\n    const variant?: Variant @ variant\n\nThe type of physical scale\n\n## Commands\n\n    command calibrate_zero_offset @ 0x80 { }\n\nCall this command when there is nothing on the scale. If supported, the module should save the calibration data.\n\n    command calibrate_gain @ 0x81 {\n        weight: u22.10 g\n    }\n\nCall this command with the weight of the thing on the scale.\n"
}