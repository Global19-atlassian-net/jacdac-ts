{
  "name": "Distance",
  "status": "experimental",
  "shortId": "distance",
  "camelName": "distance",
  "shortName": "distance",
  "extends": [
    "_base",
    "_sensor"
  ],
  "notes": {
    "short": "A sensor that determines the distance of an object without any physical contact involved."
  },
  "classIdentifier": 337275786,
  "enums": {
    "Variant": {
      "name": "Variant",
      "storage": 4,
      "members": {
        "Ultrasonic": 1,
        "Infrared": 2,
        "LiDAR": 3,
        "Laser": 4
      }
    }
  },
  "packets": [
    {
      "kind": "ro",
      "name": "status_code",
      "identifier": 259,
      "description": "Reports the current state or error status of the device. ``code`` is a standardized value from \nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\nstate. This report is typically not queried, when a device has an error, it will typically\nadd this report in frame along with the announce packet.",
      "fields": [
        {
          "name": "code",
          "unit": "",
          "type": "u16",
          "storage": 2,
          "isSimpleType": true
        },
        {
          "name": "vendor_code",
          "unit": "",
          "type": "u16",
          "storage": 2,
          "isSimpleType": true
        }
      ],
      "optional": true,
      "identifierName": "status_code",
      "packFormat": "u16 u16",
      "derived": "_base"
    },
    {
      "kind": "event",
      "name": "status_code_changed",
      "identifier": 4,
      "description": "Notifies that the status code of the service changed.",
      "fields": [
        {
          "name": "code",
          "unit": "",
          "type": "u16",
          "storage": 2,
          "isSimpleType": true
        },
        {
          "name": "vendor_code",
          "unit": "",
          "type": "u16",
          "storage": 2,
          "isSimpleType": true
        }
      ],
      "optional": true,
      "identifierName": "status_code_changed",
      "packFormat": "u16 u16",
      "derived": "_base"
    },
    {
      "kind": "const",
      "name": "instance_name",
      "identifier": 265,
      "description": "A friendly name that describes the role of this service instance in the device.\nIt often corresponds to what's printed on the device:\nfor example, `A` for button A, or `S0` for servo channel 0.\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).",
      "fields": [
        {
          "name": "_",
          "unit": "",
          "type": "string",
          "storage": 0
        }
      ],
      "optional": true,
      "identifierName": "instance_name",
      "packFormat": "s",
      "derived": "_base"
    },
    {
      "kind": "rw",
      "name": "streaming_samples",
      "identifier": 3,
      "description": "Asks device to stream a given number of samples\n(clients will typically write `255` to this register every second or so, while streaming is required).",
      "fields": [
        {
          "name": "_",
          "unit": "",
          "type": "u8",
          "storage": 1,
          "isSimpleType": true
        }
      ],
      "internal": true,
      "identifierName": "streaming_samples",
      "packFormat": "u8",
      "derived": "_sensor"
    },
    {
      "kind": "rw",
      "name": "streaming_interval",
      "identifier": 4,
      "description": "Period between packets of data when streaming in milliseconds.",
      "fields": [
        {
          "name": "_",
          "unit": "ms",
          "type": "u32",
          "storage": 4,
          "isSimpleType": true,
          "defaultValue": 100,
          "typicalMin": 1,
          "typicalMax": 60000
        }
      ],
      "identifierName": "streaming_interval",
      "packFormat": "u32",
      "derived": "_sensor"
    },
    {
      "kind": "const",
      "name": "streaming_preferred_interval",
      "identifier": 258,
      "description": "Preferred default streaming interval for sensor in milliseconds.",
      "fields": [
        {
          "name": "_",
          "unit": "ms",
          "type": "u32",
          "storage": 4,
          "isSimpleType": true
        }
      ],
      "internal": true,
      "optional": true,
      "identifierName": "streaming_preferred_interval",
      "packFormat": "u32",
      "derived": "_sensor"
    },
    {
      "kind": "ro",
      "name": "distance",
      "identifier": 257,
      "description": "Current distance from the object",
      "fields": [
        {
          "name": "_",
          "unit": "m",
          "shift": 16,
          "type": "u16.16",
          "storage": 4,
          "typicalMin": 0.02,
          "typicalMax": 4
        }
      ],
      "identifierName": "reading",
      "packFormat": "u16.16"
    },
    {
      "kind": "const",
      "name": "min_range",
      "identifier": 260,
      "description": "Minimum measurable distance",
      "fields": [
        {
          "name": "_",
          "unit": "m",
          "shift": 16,
          "type": "u16.16",
          "storage": 4
        }
      ],
      "optional": true,
      "identifierName": "min_reading",
      "packFormat": "u16.16"
    },
    {
      "kind": "const",
      "name": "max_range",
      "identifier": 261,
      "description": "Maximum measurable distance",
      "fields": [
        {
          "name": "_",
          "unit": "m",
          "shift": 16,
          "type": "u16.16",
          "storage": 4
        }
      ],
      "optional": true,
      "identifierName": "max_reading",
      "packFormat": "u16.16"
    },
    {
      "kind": "const",
      "name": "variant",
      "identifier": 263,
      "description": "Determines the type of sensor used.",
      "fields": [
        {
          "name": "_",
          "unit": "",
          "type": "Variant",
          "storage": 4
        }
      ],
      "optional": true,
      "identifierName": "variant",
      "packFormat": "u32"
    }
  ],
  "source": "# Distance\n\nA sensor that determines the distance of an object without any physical contact involved.\n\n        identifier:  0x141a6b8a\n        extends: _sensor\n\n## Registers\n\n    ro distance: u16.16 m { typical_min=0.02, typical_max=4 } @ reading\n\nCurrent distance from the object\n\n    const min_range?: u16.16 m @ min_reading\n\nMinimum measurable distance \n\n    const max_range?: u16.16 m @ max_reading\n\nMaximum measurable distance\n\n    enum Variant: u32 {\n        Ultrasonic = 1,\n        Infrared = 2,\n        LiDAR = 3,\n        Laser = 4,\n    }\n    const variant?: Variant @ variant\n\nDetermines the type of sensor used.\n",
  "tags": []
}