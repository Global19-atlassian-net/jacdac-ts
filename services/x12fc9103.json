{
  "name": "Servo",
  "status": "experimental",
  "shortId": "servo",
  "camelName": "servo",
  "shortName": "servo",
  "extends": [
    "_base"
  ],
  "notes": {
    "short": "Servo is a small motor with arm that can be pointing at a specific direction."
  },
  "classIdentifier": 318542083,
  "enums": {
    "Variant": {
      "name": "Variant",
      "storage": 4,
      "members": {
        "PositionalRotation": 1,
        "Linear": 2
      }
    }
  },
  "packets": [
    {
      "kind": "ro",
      "name": "status_code",
      "identifier": 259,
      "description": "Reports the current state or error status of the device. ``code`` is a standardized value from \nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\nstate. This report is typically not queried, when a device has an error, it will typically\nadd this report in frame along with the announce packet.",
      "fields": [
        {
          "name": "code",
          "unit": "",
          "type": "u16",
          "storage": 2,
          "isSimpleType": true
        },
        {
          "name": "vendor_code",
          "unit": "",
          "type": "u16",
          "storage": 2,
          "isSimpleType": true
        }
      ],
      "optional": true,
      "identifierName": "status_code",
      "packFormat": "u16 u16",
      "derived": "_base"
    },
    {
      "kind": "event",
      "name": "status_code_changed",
      "identifier": 4,
      "description": "Notifies that the status code of the service changed.",
      "fields": [
        {
          "name": "code",
          "unit": "",
          "type": "u16",
          "storage": 2,
          "isSimpleType": true
        },
        {
          "name": "vendor_code",
          "unit": "",
          "type": "u16",
          "storage": 2,
          "isSimpleType": true
        }
      ],
      "optional": true,
      "identifierName": "status_code_changed",
      "packFormat": "u16 u16",
      "derived": "_base"
    },
    {
      "kind": "const",
      "name": "instance_name",
      "identifier": 265,
      "description": "A friendly name that describes the role of this service instance in the device.\nIt often corresponds to what's printed on the device:\nfor example, `A` for button A, or `S0` for servo channel 0.\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).",
      "fields": [
        {
          "name": "_",
          "unit": "",
          "type": "string",
          "storage": 0
        }
      ],
      "optional": true,
      "identifierName": "instance_name",
      "packFormat": "s",
      "derived": "_base"
    },
    {
      "kind": "rw",
      "name": "angle",
      "identifier": 2,
      "description": "Specifies the angle of the arm.",
      "fields": [
        {
          "name": "_",
          "unit": "°",
          "shift": 16,
          "type": "i16.16",
          "storage": -4,
          "typicalMin": -90,
          "typicalMax": 90
        }
      ],
      "identifierName": "value",
      "packFormat": "i16.16"
    },
    {
      "kind": "rw",
      "name": "enabled",
      "identifier": 1,
      "description": "Turn the power to the servo on/off.",
      "fields": [
        {
          "name": "_",
          "unit": "",
          "type": "bool",
          "storage": 1
        }
      ],
      "identifierName": "intensity",
      "packFormat": "u8"
    },
    {
      "kind": "rw",
      "name": "offset",
      "identifier": 129,
      "description": "Correction applied to the angle to account for the servo arm drift.",
      "fields": [
        {
          "name": "_",
          "unit": "°",
          "shift": 16,
          "type": "i16.16",
          "storage": -4
        }
      ],
      "optional": true,
      "packFormat": "i16.16"
    },
    {
      "kind": "const",
      "name": "min_angle",
      "identifier": 260,
      "description": "Lowest angle that can be set.",
      "fields": [
        {
          "name": "_",
          "unit": "°",
          "shift": 16,
          "type": "i16.16",
          "storage": -4
        }
      ],
      "optional": true,
      "identifierName": "min_reading",
      "packFormat": "i16.16"
    },
    {
      "kind": "const",
      "name": "max_angle",
      "identifier": 261,
      "description": "Highest angle that can be set.",
      "fields": [
        {
          "name": "_",
          "unit": "°",
          "shift": 16,
          "type": "i16.16",
          "storage": -4
        }
      ],
      "optional": true,
      "identifierName": "max_reading",
      "packFormat": "i16.16"
    },
    {
      "kind": "const",
      "name": "variant",
      "identifier": 263,
      "description": "Specifies the type of servo motor.\n* Positional Rotation Servos: Positional servos can rotate the shaft in about half of the circle,\nwith features to avoid over-rotating. Most servo have a range of 180° but some allow 270° or 360°.\n* Linear Servos: linear servos are also like a positional servo, but with additional gears to the adjust the output from circular to back-and-forth.",
      "fields": [
        {
          "name": "_",
          "unit": "",
          "type": "Variant",
          "storage": 4
        }
      ],
      "identifierName": "variant",
      "packFormat": "u32"
    },
    {
      "kind": "const",
      "name": "stall_torque",
      "identifier": 384,
      "description": "The servo motor will stop rotating when it is trying to move a ``stall_torque`` weight at a radial distance of ``1.0`` cm.",
      "fields": [
        {
          "name": "_",
          "unit": "kg/cm",
          "shift": 16,
          "type": "u16.16",
          "storage": 4
        }
      ],
      "optional": true,
      "packFormat": "u16.16"
    },
    {
      "kind": "const",
      "name": "response_speed",
      "identifier": 385,
      "description": "Time to move 60°.",
      "fields": [
        {
          "name": "_",
          "unit": "s/60°",
          "shift": 16,
          "type": "u16.16",
          "storage": 4
        }
      ],
      "optional": true,
      "packFormat": "u16.16"
    }
  ],
  "source": "# Servo\n\n    identifier: 0x12fc9103\n\nServo is a small motor with arm that can be pointing at a specific direction.\n\n## Registers\n\n    rw angle: i16.16 ° { typical_min=-90, typical_max=90 } @ value\n\nSpecifies the angle of the arm.\n\n    rw enabled: bool @ intensity\n\nTurn the power to the servo on/off.\n\n    rw offset?: i16.16 ° @ 0x81\n\nCorrection applied to the angle to account for the servo arm drift.\n\n    const min_angle?: i16.16 ° @ min_reading\n\nLowest angle that can be set.\n\n    const max_angle?: i16.16 ° @ max_reading\n\nHighest angle that can be set.\n\n    enum Variant: u32 {\n        PositionalRotation = 1,\n        Linear = 2,\n    }\n    const variant: Variant @ variant\n\nSpecifies the type of servo motor.\n* Positional Rotation Servos: Positional servos can rotate the shaft in about half of the circle,\nwith features to avoid over-rotating. Most servo have a range of 180° but some allow 270° or 360°.\n* Linear Servos: linear servos are also like a positional servo, but with additional gears to the adjust the output from circular to back-and-forth.\n\n    const stall_torque?: u16.16 kg/cm @ 0x180\n\nThe servo motor will stop rotating when it is trying to move a ``stall_torque`` weight at a radial distance of ``1.0`` cm.\n\n    const response_speed?: u16.16 s/60° @ 0x181\n\nTime to move 60°.\n"
}