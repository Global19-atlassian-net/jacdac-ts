{"version":3,"sources":["webpack:///./src/components/makecode/MakeCodeEditorExtensionClient.ts","webpack:///./src/components/makecode/MakeCodeEditorExtension.tsx","webpack:///./src/pages/tools/makecode-editor-extension.tsx"],"names":["MakeCodeEditorExtensionClient","pendingCommands","extensionId","inIFrame","window","location","hash","substr","undefined","_connected","_visible","nextRequestId","handleMessage","bind","addEventListener","mount","removeEventListener","on","refresh","init","log","msg","console","this","setVisible","vis","emit","CHANGE","mkRequest","resolve","reject","action","body","id","type","extId","response","sendRequest","Promise","parent","postMessage","ev","data","success","resp","CONNECT","event","_target","target","debug","read","a","r","readUser","write","code","json","jres","dependencies","queryPermission","requestPermission","dataStreamConsole","dataStreamMessages","messages","JDClient","toTypescript","config","ns","roles","map","role","name","camelize","resolveMakecodeServiceFromClassIdentifier","service","client","qName","join","toDependencies","forEach","mk","repo","ClientRoleRow","props","component","onUpdate","useMemo","serviceError","nameError","Grid","item","xs","container","spacing","md","TextField","fullWidth","error","variant","label","helperText","value","onChange","escapeName","ServiceSpecificationSelect","serviceClass","setServiceClass","IconButtonWithTooltip","title","onClick","splice","indexOf","MakeCodeEditorExtension","bus","useContext","JACDACContext","useState","setClient","useEffect","c","clear","channel","source","pkt","Packet","fromBinary","timestamp","sender","processPacket","unmount","useMakeCodeEditorExtensionClient","connected","useChange","configuration","setConfiguration","subscribe","cfg","JSONTryParse","update","clone","handleSave","ts","JSON","stringify","deps","direction","i","key","AddServiceIconButton","serviceFilter","srv","resolveMakecodeService","onAdd","names","concat","serviceSpecifications","spec","camelName","filter","n","push","uniqueName","shortId","classIdentifier","CmdButton","disabled","icon","useStyles","makeStyles","theme","createStyles","content","display","minHeight","minWidth","flexDirection","padding","transition","transitions","create","easing","sharp","duration","leavingScreen","flexGrow","Page","rawTheme","createMuiTheme","palette","primary","main","secondary","classes","responsiveFontSizes","Flags","webUSB","ThemedLayout","className","PaperBox","RoleManager"],"mappings":"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","file":"component---src-pages-tools-makecode-editor-extension-tsx-a0b4914948625aa1ead2.js","sourcesContent":["import { useContext, useEffect, useState } from \"react\";\nimport { JDClient } from \"../../../../src/jdom/client\";\nimport { CHANGE, CONNECT, CONNECTING, PACKET_SEND } from \"../../../../src/jdom/constants\";\nimport { inIFrame } from \"../../../../src/jdom/iframeclient\";\nimport Packet from \"../../../../src/jdom/packet\";\nimport { SMap } from \"../../../../src/jdom/utils\";\nimport JACDACContext, { JDContextProps } from \"../../../../src/react/Context\";\n\nexport const READ = \"read\"\nexport const MESSAGE_PACKET = \"messagepacket\"\nconst HIDDEN = \"hidden\"\nconst SHOWN = \"shown\"\nconst SENDER = \"jacdac-editor-extension\"\n\nexport interface ReadResponse {\n    code?: string;\n    json?: string;\n    jres?: string;\n}\n\nexport class MakeCodeEditorExtensionClient extends JDClient {\n    private readonly pendingCommands: {\n        [key: string]: {\n            action: string;\n            resolve: (resp: any) => void;\n            reject: (e: any) => void;\n        }\n    } = {};\n    private readonly extensionId: string = inIFrame() ? window.location.hash.substr(1) : undefined;\n    private _target: any; // full apptarget\n    private _connected = false;\n    private _visible = false;\n\n    private log(msg: string) {\n        console.log(`mkcd ${this.extensionId}: ${msg}`)\n    }\n\n    constructor() {\n        super();\n        this.handleMessage = this.handleMessage.bind(this);\n        if (typeof window !== \"undefined\") {\n            window.addEventListener(\"message\", this.handleMessage, false);\n            this.mount(() => window.removeEventListener(\"message\", this.handleMessage));\n        }\n        // always refresh on load\n        this.on(SHOWN, () => this.refresh());\n        // notify parent that we're ready\n        this.init();\n    }\n\n    get target() {\n        return this._target;\n    }\n\n    get connected() {\n        return this._connected;\n    }\n\n    get visible() {\n        return this._visible;\n    }\n\n    private setVisible(vis: boolean) {\n        if (this._visible !== vis) {\n            this._visible = vis;\n            this.emit(CHANGE);\n        }\n    }\n\n    private nextRequestId = 1;\n    private mkRequest(resolve: (resp: any) => void, reject: (e: any) => void, action: string, body?: any): any {\n        const id = \"jd_\" + this.nextRequestId++;\n        this.pendingCommands[id] = { action, resolve, reject };\n        return {\n            type: \"pxtpkgext\",\n            action,\n            extId: this.extensionId,\n            response: true,\n            id,\n            body\n        }\n    }\n\n    private sendRequest<T>(action: string, body?: any): Promise<T> {\n        this.log(`send ${action}`)\n        if (!this.extensionId)\n            return Promise.resolve(undefined);\n\n        return new Promise((resolve, reject) => {\n            const msg = this.mkRequest(resolve, reject, action, body);\n            window.parent.postMessage(msg, \"*\");\n        })\n    }\n\n    private handleMessage(ev: any) {\n        const msg = ev.data;\n        if (msg?.type !== \"pxtpkgext\")\n            return;\n        if (!msg.id) {\n            switch (msg.event) {\n                case \"extinit\":\n                    this.log(`init`)\n                    this._target = msg.target;\n                    this._connected = true;\n                    this.emit(CONNECT);\n                    this.emit(CHANGE);\n                    break;\n                case \"extloaded\":\n                    this.log(`loaded`)\n                    break;\n                case \"extshown\":\n                    this.setVisible(true)\n                    this.emit(SHOWN);\n                    this.emit(CHANGE);\n                    break;\n                case \"exthidden\":\n                    this.setVisible(false)\n                    this.emit(HIDDEN);\n                    this.emit(CHANGE);\n                    break;\n                case \"extdatastream\":\n                    this.emit('datastream', true);\n                    break;\n                case \"extconsole\":\n                    this.emit('console', msg.body);\n                    break;\n                case \"extmessagepacket\":\n                    this.emit(MESSAGE_PACKET, msg.body);\n                    break;\n                default:\n                    console.debug(\"Unhandled event\", msg);\n            }\n        }\n        else {\n            const { action, resolve, reject } = this.pendingCommands[msg.id];\n            // continue async ops\n            delete this.pendingCommands[msg.id];\n            if (msg.success && resolve)\n                resolve(msg.resp);\n            else if (!msg.success && reject)\n                reject(msg.resp);\n            // raise event as well\n            switch (action) {\n                case \"extinit\":\n                    this._connected = true;\n                    this.emit(CONNECT);\n                    this.emit(CHANGE);\n                    break;\n                case \"extusercode\":\n                    // Loaded, set the target\n                    this.emit('readuser', msg.resp);\n                    this.emit(CHANGE);\n                    break;\n                case \"extreadcode\":\n                    // Loaded, set the target\n                    this.emit(READ, msg.resp);\n                    this.emit(CHANGE);\n                    break;\n                case \"extwritecode\":\n                    this.emit('written', undefined);\n                    break;\n            }\n        }\n    }\n\n    private async init() {\n        this.log(`initializing`)\n        await this.sendRequest<void>('extinit');\n        this.log(`connected`)\n        await this.refresh();\n    }\n\n    private async refresh() {\n        this.log(`refresh`)\n        const r = await this.read();\n    }\n\n    async read(): Promise<ReadResponse> {\n        if (!this.extensionId) {\n            const r: ReadResponse = {};\n            this.emit(READ, r);\n            return r;\n        } else {\n            const resp: ReadResponse = await this.sendRequest('extreadcode');\n            return resp;\n        }\n    }\n\n    async readUser() {\n        await this.sendRequest('extusercode')\n    }\n\n    async write(code: string, json?: string, jres?: string, dependencies?: SMap<string>): Promise<void> {\n        if (!this.extensionId) {\n            // Write to local storage instead\n            this.emit('written', undefined);\n        } else {\n            await this.sendRequest<void>('extwritecode', {\n                code: code || undefined,\n                json: json || undefined,\n                jres: jres || undefined,\n                dependencies\n            })\n        }\n    }\n\n    async queryPermission() {\n        await this.sendRequest('extquerypermission');\n    }\n\n    async requestPermission(console: boolean) {\n        await this.sendRequest('extrequestpermission', {\n            console\n        })\n    }\n\n    async dataStreamConsole(console: boolean) {\n        await this.sendRequest('extdatastream', {\n            console\n        })\n    }\n\n    async dataStreamMessages(messages: boolean) {\n        await this.sendRequest('extdatastream', {\n            messages\n        })\n    }\n}\n\n\nexport default function useMakeCodeEditorExtensionClient() {\n    const { bus } = useContext<JDContextProps>(JACDACContext);\n    const [client, setClient] = useState<MakeCodeEditorExtensionClient>(undefined);\n    useEffect(() => {\n        console.log(`mkcd: new editor client`)\n        const c = new MakeCodeEditorExtensionClient();\n        c.on(CONNECT, () => {\n            console.log(`mkcd: stream messages`)\n            c.dataStreamMessages(true)\n        });\n        c.on([HIDDEN, SHOWN], () => bus.clear());\n        c.on(MESSAGE_PACKET, (msg) => {\n            if (msg.channel === \"jacdac\" && msg.source !== SENDER) {\n                const pkt = Packet.fromBinary(msg.data, bus.timestamp);\n                if (!pkt)\n                    return;\n                pkt.sender = msg.source || \"makecode\";\n                bus.processPacket(pkt);\n            }\n        })\n        setClient(c);\n        return () => c?.unmount()\n    }, []);\n    return client;\n}","import { Grid, TextField, useEventCallback } from \"@material-ui/core\";\nimport React, { ChangeEvent, useEffect, useMemo, useState } from \"react\";\nimport { clone, JSONTryParse, SMap, uniqueName } from \"../../../../src/jdom/utils\";\nimport useChange from '../../jacdac/useChange';\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { resolveMakecodeService, resolveMakecodeServiceFromClassIdentifier, serviceSpecificationFromClassIdentifier, serviceSpecifications } from \"../../../../src/jdom/spec\";\nimport AddServiceIconButton from \"../AddServiceIconButton\";\nimport ServiceSpecificationSelect from \"../ServiceSpecificationSelect\"\nimport { escapeName } from \"../../../../src/azure-iot/dtdl\"\nimport IconButtonWithTooltip from \"../IconButtonWithTooltip\";\nimport useMakeCodeEditorExtensionClient, { READ, ReadResponse } from \"./MakeCodeEditorExtensionClient\";\nimport CmdButton from \"../CmdButton\";\n// tslint:disable-next-line: no-submodule-imports match-default-export-name\nimport SaveIcon from '@material-ui/icons/Save';\nimport { camelize } from \"../../../../jacdac-spec/spectool/jdspec\"\n\ninterface ClientRole {\n    name: string;\n    service: number;\n}\n\ninterface Configuration {\n    roles: ClientRole[];\n}\n\nfunction toTypescript(config: Configuration) {\n    const ns = \"myModules\"\n    return `// auto-generated, do not edit.\nnamespace ${ns} {\n${config.roles.map(role => `\n    //% fixedInstance block=\"${role.name}\"\n    export const ${camelize(role.name)} = new ${resolveMakecodeServiceFromClassIdentifier(role.service).client.qName}(\"${camelize(role.name)}\");\n`).join(\"\")}\n\n    // start after main\n    control.runInParallel(function() {\n        ${config.roles.map(role => `    ${ns}.${camelize(role.name)}.start();\n        `).join(\"\")}\n    })\n}\n    `\n}\n\nfunction toDependencies(config: Configuration) {\n    const r: SMap<string> = {};\n    config?.roles.forEach(role => {\n        const mk = resolveMakecodeServiceFromClassIdentifier(role.service);\n        r[mk.client.name] = `github:${mk.client.repo}`;\n    })\n    return r;\n}\n\nfunction toJSON(config: Configuration) {\n    return config && JSON.stringify(config, null, 4);\n}\n\nfunction ClientRoleRow(props: { config: Configuration, component: ClientRole, onUpdate: () => void }) {\n    const { component, onUpdate, config } = props;\n    const { name, service } = component;\n    const { nameError, serviceError } = useMemo(() => validateClientRole(config, component), [config, component]);\n    const handleComponentNameChange = (ev: ChangeEvent<HTMLInputElement>) => {\n        component.name = escapeName(ev.target.value);\n        onUpdate();\n    }\n    const handleSetService = (serviceClass: number) => {\n        component.service = serviceClass;\n        onUpdate();\n    }\n    const handleComponentDelete = () => {\n        config.roles.splice(config.roles.indexOf(component), 1);\n        onUpdate();\n    }\n    return <Grid item xs={12}>\n        <Grid container spacing={2}>\n            <Grid item xs={4} md={6}>\n                <TextField fullWidth={true} error={!!nameError} variant=\"outlined\" label=\"name\" helperText={nameError} value={name} onChange={handleComponentNameChange} />\n            </Grid>\n            <Grid item xs={4} md={4}>\n                <ServiceSpecificationSelect variant=\"outlined\" label=\"service\" serviceClass={service} setServiceClass={handleSetService} error={serviceError} />\n            </Grid>\n            <Grid item>\n                <IconButtonWithTooltip title=\"Remove service\" onClick={handleComponentDelete}>\n                    <DeleteIcon />\n                </IconButtonWithTooltip>\n            </Grid>\n        </Grid>\n    </Grid>\n}\n\nfunction validateClientRole(config: Configuration, role: ClientRole) {\n    let serviceError: string = undefined;\n    let nameError: string = undefined;\n    return { serviceError, nameError }\n}\n\nexport default function MakeCodeEditorExtension() {\n    const client = useMakeCodeEditorExtensionClient();\n    const connected = useChange(client, c => c?.connected)\n    const [configuration, setConfiguration] = useState<Configuration>({\n        roles: []\n    } as Configuration);\n    useEffect(() => client?.subscribe(READ,\n        (resp: ReadResponse) => {\n            console.log(`mkcd: read received`)\n            const cfg = JSONTryParse(resp.json);\n            console.log({ resp, cfg })\n            if (cfg)\n                setConfiguration(cfg);\n        }), [client]);\n    const hasMakeCodeService = (srv: jdspec.ServiceSpec) => !!resolveMakecodeService(srv)\n    const update = () => {\n        setConfiguration(clone(configuration));\n    }\n    const handleAddService = (service: jdspec.ServiceSpec) => {\n        if (!configuration.roles)\n            configuration.roles = [];\n        const names = configuration.roles.map(c => c.name)\n            .concat(serviceSpecifications().map(spec => spec.camelName))\n            .filter(n => !!n);\n        configuration.roles.push({\n            name: uniqueName(names, service.camelName || service.shortId),\n            service: service.classIdentifier\n        })\n        update();\n    }\n    const handleSave = async () => {\n        const ts = toTypescript(configuration);\n        const json = toJSON(configuration)\n        const deps = toDependencies(configuration)\n        console.log(`mkcd: saving...`)\n        await client.write(ts, json, undefined, deps);\n    }\n\n    return <Grid container direction=\"row\" spacing={2}>\n        {configuration.roles?.map((c, i) => <ClientRoleRow key={'config' + i} config={configuration} component={c} onUpdate={update} />)}\n        <Grid item xs={12}>\n            <AddServiceIconButton serviceFilter={hasMakeCodeService} onAdd={handleAddService} />\n        </Grid>\n        <Grid item xs={12}>\n            <CmdButton variant=\"contained\" disabled={!connected} icon={<SaveIcon />} onClick={handleSave}>save</CmdButton>\n        </Grid>\n    </Grid>\n}","import React, { useEffect } from \"react\"\nimport { createMuiTheme, createStyles, responsiveFontSizes } from \"@material-ui/core\";\nimport ThemedLayout from \"../../components/ThemedLayout\";\nimport MakeCodeEditorExtension from \"../../components/makecode/MakeCodeEditorExtension\"\nimport { makeStyles, Container, Hidden, Box, Paper, Button } from '@material-ui/core';\nimport PaperBox from \"../../components/PaperBox\";\nimport Flags from \"../../../../src/jdom/flags\";\nimport DeviceList from \"../../components/DeviceList\"\nimport RoleManager from \"../../components/RoleManager\";\n\nconst useStyles = makeStyles((theme) => createStyles({\n    content: {\n        display: 'flex',\n        minHeight: '100vh',\n        minWidth: '10rem',\n        flexDirection: 'column',\n        padding: theme.spacing(3),\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        flexGrow: 1\n    },\n}));\n\nexport default function Page() {\n    const rawTheme = createMuiTheme({\n        palette: {\n            primary: {\n                main: '#2e7d32',\n            },\n            secondary: {\n                main: '#ffc400',\n            },\n        }\n    })\n    const classes = useStyles();\n    const theme = responsiveFontSizes(rawTheme);\n    useEffect(() => {\n        Flags.webUSB = false;\n    }, [])\n    return <ThemedLayout theme={theme}>\n        <div className={classes.content}>\n            <PaperBox>\n                <MakeCodeEditorExtension />\n            </PaperBox>\n            <RoleManager />\n        </div>\n    </ThemedLayout>\n}\n"],"sourceRoot":""}