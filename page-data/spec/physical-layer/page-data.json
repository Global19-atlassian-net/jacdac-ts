{"componentChunkName":"component---src-components-spec-tsx","path":"/spec/physical-layer/","result":{"data":{"mdx":{"id":"92c5717d-6173-5b23-a3f6-2f4d371d0d0f","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"physical-layer\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h1\"\n  }, {\n    \"href\": \"#physical-layer\",\n    \"aria-label\": \"physical layer permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Physical layer\"), mdx(\"p\", null, \"Communication is done over a single line, using UART peripheral running at 1MHz,\\n8 bit per byte, no parity, 1 stop bit, LSB first (standard).\\nThe line is held high when idle with either internal or external pull up of\\naround 20-50k\\u03A9 per device.\"), mdx(\"h2\", {\n    \"id\": \"reception\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#reception\",\n    \"aria-label\": \"reception permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Reception\"), mdx(\"p\", null, \"Normally, devices are set up to trigger an interrupt on line going low, with UART disabled.\\nWhen the line goes low, the device performs the following steps:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"zero-out header of the packet to be received\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"wait for line going high again\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"setup a UART in receive mode\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"start reception\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"setup a timer for 100us (TODO)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"when the timer fires, if the header is still all zero, signal timeout and abort reception\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"otherwise, given that the header declares size to be \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"N\"), \", setup timer for \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"(N + 16) * 12 + 60\"), \" (and don't touch reception)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"if UART break is detected, abort reception, abort the timer and process incoming packet (see below)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"if timer fires, signal timeout and abort reception\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"setup line as input with pull up and reception interrupt\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"possibly, start transmission timer (see below)\")), mdx(\"h2\", {\n    \"id\": \"processing-incoming-packets\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#processing-incoming-packets\",\n    \"aria-label\": \"processing incoming packets permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Processing incoming packets\"), mdx(\"p\", null, \"We arrive here when a UART break was detected.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"optionally, check if at least \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"N + 16\"), \" bytes was received;\\nthis may be difficult depending on DMA hardware, so can be skipped\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"compute CRC of bytes \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"2\"), \" until \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"N + 16\"), \" of data;\\nif it doesn't match the CRC in the first two bytes, signal error and stop processing this packet\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"do control layer processing of packet (next section)\")), mdx(\"h2\", {\n    \"id\": \"transmission\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#transmission\",\n    \"aria-label\": \"transmission permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Transmission\"), mdx(\"p\", null, \"Devices should maintain a queue of packets to send.\\nWhen either transmission or reception finishes, and the queue is non-empty\\nthe device should set up a timer for a random period roughly between 100us and 200us.\\nIf this timer fires before any reception starts, the device can start\\ntransmitting as described here.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"disable reception interrupt\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"if we are already in reception abort transmission\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"as quickly as possible, probe the line and if it's high, pull it low\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"if the line was low, abort transmission and start reception as if the reception interrupt triggered\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"wait ~10us\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"pull the line high\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"wait ~40us\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"configure UART for transmission and start it\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"when transmission ends:\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"disable UART\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"pull the line high\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"pull it low\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"wait ~10us\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"pull the line high\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"setup line as input with pull up and reception interrupt\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"possibly, start transmission timer (see above)\")), mdx(\"p\", null, \"Wait times need to be determined experimentally, so that the following are observed:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"initial low pulse is 11-15us\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the gap between end of low pulse and start of UART transmission is 40-50us (TODO)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"spacing between characters in UART transmission should be never more than 9us,\\nand on average less than 2us\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the gap after UART transmission and before final break is less than 10us\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the final break is 11-15us\")), mdx(\"p\", null, \"The probe-and-pull operation can typically be performed in a few cycles\\nand is critical to do as quick as possible.\\nThe time difference between probe and set is the collision window of the protocol.\\nThis can be typically brought down to around 50-100ns depending on MCU speed and GPIO hardware.\\nTypically, you'll want to add a function that is forced to be non-inline\\nand takes all arguments it needs pre-computed (GPIO port address, pin mask etc.).\\nIt's good idea to look at disassembly of that function.\"), mdx(\"p\", null, \"Such collision window cause about 0.3% packet loss when two devices try to\\nwrite on the bus as quickly as possible.\\nThe packet loss grows quadratically with number of devices, but typically\\ndevices do not flood the bus, which results in much lower packet losses.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":""}}},"pageContext":{"id":"92c5717d-6173-5b23-a3f6-2f4d371d0d0f"}}}