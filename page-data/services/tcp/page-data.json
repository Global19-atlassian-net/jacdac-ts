{"componentChunkName":"component---src-templates-service-mdx","path":"/services/tcp/","result":{"pageContext":{"frontmatter":{},"node":{"name":"TCP","shortName":"TCP","shortId":"tcp","classIdentifier":457422603,"extends":[],"notes":{"short":"Data transfer over TCP/IP and TLS stream sockets.","long":null},"packets":[{"kind":"command","name":"open","identifier":128,"description":"Open pair of pipes between network peripheral and a controlling device. In/outbound refers to direction from/to internet.","derived":null,"fields":[{"name":"inbound","unit":"","type":"pipe","storage":12,"defaultValue":null,"isSimpleType":null,"absoluteMin":null,"absoluteMax":null,"typicalMin":null,"typicalMax":null}]},{"kind":"report","name":"open","identifier":128,"description":"Open pair of pipes between network peripheral and a controlling device. In/outbound refers to direction from/to internet.","derived":null,"fields":[{"name":"outbound_port","unit":"","type":"pipe_port","storage":2,"defaultValue":null,"isSimpleType":null,"absoluteMin":null,"absoluteMax":null,"typicalMin":null,"typicalMax":null}]},{"kind":"meta_pipe_command","name":"open_ssl","identifier":1,"description":"Open an SSL connection to a given host:port pair. Can be issued only once on given pipe.\nAfter the connection is established, an empty data report is sent.\nConnection is closed by closing the pipe.","derived":null,"fields":[{"name":"tcp_port","unit":"","type":"u16","storage":2,"defaultValue":null,"isSimpleType":true,"absoluteMin":null,"absoluteMax":null,"typicalMin":null,"typicalMax":null},{"name":"hostname","unit":"","type":"string","storage":0,"defaultValue":null,"isSimpleType":null,"absoluteMin":null,"absoluteMax":null,"typicalMin":null,"typicalMax":null}]},{"kind":"pipe_command","name":"outdata","identifier":0,"description":"Bytes to be sent directly over an established TCP or SSL connection.","derived":null,"fields":[{"name":"data","unit":"","type":"bytes","storage":0,"defaultValue":null,"isSimpleType":true,"absoluteMin":null,"absoluteMax":null,"typicalMin":null,"typicalMax":null}]},{"kind":"pipe_report","name":"indata","identifier":0,"description":"Bytes read directly from directly over an established TCP or SSL connection.","derived":null,"fields":[{"name":"data","unit":"","type":"bytes","storage":0,"defaultValue":null,"isSimpleType":true,"absoluteMin":null,"absoluteMax":null,"typicalMin":null,"typicalMax":null}]},{"kind":"meta_pipe_report","name":"error","identifier":0,"description":"Reported when an error is encountered. Negative error codes come directly from the SSL implementation.","derived":null,"fields":[{"name":"error","unit":"","type":"TcpError","storage":-4,"defaultValue":null,"isSimpleType":null,"absoluteMin":null,"absoluteMax":null,"typicalMin":null,"typicalMax":null}]}],"source":"# TCP\n\n    identifier: 0x1b43b70b\n\nData transfer over TCP/IP and TLS stream sockets.\n\n## Commands\n\n    command open @ 0x80 {\n        inbound: pipe\n    }\n    report {\n        outbound_port: pipe_port\n    }\n\nOpen pair of pipes between network peripheral and a controlling device. In/outbound refers to direction from/to internet.\n\n## Pipes\n\n    meta pipe command open_ssl @ 0x01 {\n        tcp_port: u16\n        hostname: string\n    }\n\nOpen an SSL connection to a given host:port pair. Can be issued only once on given pipe.\nAfter the connection is established, an empty data report is sent.\nConnection is closed by closing the pipe.\n\n    pipe command outdata {\n        data: bytes\n    }\n\nBytes to be sent directly over an established TCP or SSL connection.\n\n    pipe report indata {\n        data: bytes\n    }\n\nBytes read directly from directly over an established TCP or SSL connection.\n\n    enum TcpError : i32 {\n        InvalidCommand = 1\n        InvalidCommandPayload = 2\n    }\n    meta pipe report error @ 0x00 {\n        error: TcpError\n    }\n\nReported when an error is encountered. Negative error codes come directly from the SSL implementation.\n"}}}}