{"componentChunkName":"component---src-components-spec-tsx","path":"/reference/led-animation/","result":{"data":{"mdx":{"id":"dc51ae8b-ba5f-57d0-b492-0c232763e091","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"LED Animation\",\n  \"order\": 10\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"led-animation\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h1\"\n  }, {\n    \"href\": \"#led-animation\",\n    \"aria-label\": \"led animation permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"LED Animation\"), mdx(\"p\", null, \"Jacdac supports a simple encoding for basic LED animations. It is used in the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/jacdac-ts/services/control\"\n  }), \"control service\"), \"\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"status_light\"), \" register and also in the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/jacdac-ts/services/led\"\n  }), \"led service\"), \".\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"    rw status_light ... {\\n        repeats:\\n            hue: u8\\n            saturation: u8\\n            value: u8\\n            duration8: u8 8ms\\n    }\\n\")), mdx(\"p\", null, \"Specifies a status light animation sequence on a colored or monochrome LED.\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"hue\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"saturation\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"value\"), \" are the components of an HSV color\\nand \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"duration8\"), \" is the duration of transition to the next color in the array, in units of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"8ms\"), \". Module with monochrome LED can ignore \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"hue\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"saturation\"), \" and use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"value\"), \". The animation is played in a loop.\\nSet the register to empty buffer to disable the animation.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Design your animation using the \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/jacdac-ts/tools/led-animation-designer\"\n  }), \"LED Animation designer\"), \".\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"LED Animation"}}},"pageContext":{"id":"dc51ae8b-ba5f-57d0-b492-0c232763e091"}},"staticQueryHashes":["2214083594","2270080012","2461311362","2744294623","3159585216","413816803","63159454"]}