{"version":3,"sources":["webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./src/components/spec.tsx","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js"],"names":["MDXRenderer","require","module","PageTemplate","mdx","data","body","pageQuery","React","useMDXComponents","useMDXScope","scope","components","children","props","mdxComponents","mdxScope","End","fullScope","keys","Object","values","key","fn"],"mappings":"gFAMA,IAAMA,EAAcC,EAApB,QAEAC,UAAiB,CACfF,YAAaA,I,kCCTf,sJAMe,SAASG,EAAT,GAAyC,IAATC,EAAS,EAAjBC,KAAQD,IAC7C,OAAO,kBAAC,IAAD,KACH,kBAAC,cAAD,KACE,kBAAC,cAAD,KAAcA,EAAIE,QAKnB,IAAMC,EAAY,c,qrECdzB,IAAMC,EAAQP,EAAd,Q,EACkCA,EAAQ,QAAlCQ,E,EAAAA,iBAAkBL,E,EAAAA,IAClBM,EAAgBT,EAAQ,QAAxBS,YAERR,UAAiB,SAAqB,GAKlC,IAJFS,EAIC,EAJDA,MACAC,EAGC,EAHDA,WACAC,EAEC,EAFDA,SACGC,E,oIACF,sCACKC,EAAgBN,EAAtB,GACMO,EAAWN,EAFhB,GAKKO,EAAMT,EAAA,SAAc,WACxB,MACE,OAAO,KAGT,IAAMU,EAAS,GAGbV,MAHa,EAIbJ,OAJF,GAQMe,EAAOC,YAAb,GACMC,EAASF,EAAA,KAAS,SAAAG,GAAG,OAAIJ,EAAJ,MAG3B,OAFQ,mCAAR,KAEOK,2BAAP,OACC,CAACV,EAlBJ,IAoBA,OAAOL,EAAA,mBAA2BI,WAAYG,GAA9C","file":"component---src-components-spec-tsx-ceb6d856783bef020de9.js","sourcesContent":["/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport { MDXProvider } from \"@mdx-js/react\"\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\nimport Layout from \"./layout\"\n\nexport default function PageTemplate({ data: { mdx } }) {\n  return <Layout>\n      <MDXProvider>\n        <MDXRenderer>{mdx.body}</MDXRenderer>\n      </MDXProvider>\n  </Layout>\n}\n\nexport const pageQuery = graphql`\n  query SpecQuery($id: String) {\n    mdx(id: { eq: $id }) {\n      id\n      body\n      frontmatter {\n        title\n      }\n    }\n  }\n`","const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n"],"sourceRoot":""}