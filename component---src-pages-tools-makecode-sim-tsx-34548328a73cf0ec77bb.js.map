{"version":3,"sources":["webpack:///./src/pages/tools/makecode-sim.tsx"],"names":["Page","rawTheme","createMuiTheme","palette","primary","main","secondary","theme","responsiveFontSizes","m","variant","dashboard"],"mappings":"8FAAA,sPAkDe,SAASA,IACpB,IAAMC,EAAWC,YAAe,CAC5BC,QAAS,CACLC,QAAS,CACLC,KAAM,WAEVC,UAAW,CACPD,KAAM,cAIZE,EAAQC,YAAoBP,GAClC,OAAO,kBAAC,IAAD,CAAcM,MAAOA,GACxB,kBAAC,IAAD,CAAKE,EAAG,IACJ,kBAAC,IAAD,CAAYC,QAAQ,aAApB,YAIJ,kBAAC,IAAD,CAAcC,WAAW","file":"component---src-pages-tools-makecode-sim-tsx-34548328a73cf0ec77bb.js","sourcesContent":["import React, { useContext, useState } from \"react\"\nimport { Box, Card, CardContent, CardHeader, Collapse, createMuiTheme, Grid, GridSize, responsiveFontSizes, Typography } from \"@material-ui/core\";\nimport ThemedLayout from \"../../components/ThemedLayout\";\nimport JDomTreeView from \"../../components/JDomTreeView\";\nimport { JDService } from \"../../../../src/jdom/service\";\nimport useDeviceName from \"../../components/useDeviceName\";\nimport { JDRegister } from \"../../../../src/jdom/register\";\nimport { useRegisterHumanValue } from \"../../jacdac/useRegisterValue\";\nimport useChange from \"../../jacdac/useChange\";\nimport JACDACContext, { JDContextProps } from \"../../../../src/react/Context\";\nimport { isSensor } from \"../../../../src/jdom/spec\";\n\nconst ReadingItem = (props: { register: JDRegister, expanded: boolean, onExpanded: () => void }) => {\n    const { register, expanded, onExpanded } = props;\n    const { service, specification } = register;\n    const deviceName = useDeviceName(service.device);\n    const breakPoints: { xs: GridSize } = expanded ? { xs: 12 }\n        : { xs: 6 };\n    const humanValue = useRegisterHumanValue(register)\n\n    return <Grid item {...breakPoints}>\n        <Card onClick={!expanded && onExpanded}>\n            <CardHeader title={expanded ? service.name : humanValue}\n                subheader={deviceName}\n            />\n            <CardContent>\n                <Collapse in={expanded}>\n                    <Typography variant=\"h1\">{humanValue}</Typography>\n                </Collapse>\n            </CardContent>\n        </Card>\n    </Grid>\n}\n\nconst ReadingGrid = () => {\n    const { bus } = useContext<JDContextProps>(JACDACContext)\n    const [expanded, setExpanded] = useState<any>(undefined)\n    const readingRegisters = useChange(bus, bus =>\n        bus.devices().map(device => device\n            .services().find(srv => isSensor(srv.specification))\n            ?.readingRegister\n        ).filter(reg => !!reg))\n    const handleSetExpanded = (i: any) => () => setExpanded(i)\n    return <Grid container spacing={1}>\n        {readingRegisters.map(reg => <ReadingItem key={reg.id} register={reg}\n            expanded={reg === expanded}\n            onExpanded={handleSetExpanded(reg)} />)}\n    </Grid>\n}\n\nexport default function Page() {\n    const rawTheme = createMuiTheme({\n        palette: {\n            primary: {\n                main: '#2e7d32',\n            },\n            secondary: {\n                main: '#ffc400',\n            },\n        }\n    })\n    const theme = responsiveFontSizes(rawTheme);\n    return <ThemedLayout theme={theme}>\n        <Box m={0.5}>\n            <Typography variant=\"subtitle2\">\n                Modules\n            </Typography>\n        </Box>\n        <JDomTreeView dashboard={true} />\n    </ThemedLayout>\n}\n"],"sourceRoot":""}